Ex1.1
Moving from level 2 to level 4: 

Testers and developers are on the same team. 

Find problem as much as we can. It's impossible to find all of risk, but the more we find it, the more it better.

Ex1.3
The reality we have to accept is that each software we made contain (one or many) risk. The risk (causing by bug and mistake) might be lessen and the results insignificant, or
the risk might be so hard and the outcomes disastrous. In any case, with testing, we can discover bug(s) and fault(s). Therefor, the risk is decreased. Be that as it may, we can
not make the risk equivalent to zero since it's impossible.

Ex1.4
The method to return a Vector of objects that are in either of the two argument vectors

1.5
Last index of element:
a. Fault : for (int i=x.length-1; i > 0; i--)

b. x = null

f. Change the loop:​ for (int i=x.length-1; i >= 0; i--)

Find last index of zero


a. Fault in: for (int i = 0; i < x.length; i++)

b. All inputs execute the fault.

f. Change the loop into:​ for (int i=x.length-1; i >= 0; i--)

Count positive elements


a. Fault in: if (x[i] >= 0)

b. x = null or x is empty.

c. For x is non-empty and x \neq 0

d. All the input that results in error also results in failure.

f. Change it into:​ if (x[i] > 0)


Count odd or positive elements


a. Fault in if (x[i]%2 == 1 || x[i] > 0).

b. x = null or x is empty.

d. All the input that results in error also results in failure.

f. Change this statement into:​ if (x[i]%2 == -1 || x[i] > 0)
